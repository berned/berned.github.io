<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[B3RN3D]]></title>
  <link href="http://www.b3rn3d.com/atom.xml" rel="self"/>
  <link href="http://www.b3rn3d.com/"/>
  <updated>2016-11-22T01:15:26+00:00</updated>
  <id>http://www.b3rn3d.com/</id>
  <author>
    <name><![CDATA[b3rn3d]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Mobile Security and OPSEC]]></title>
    <link href="http://www.b3rn3d.com/blog/2016/11/17/opsec-mobile/"/>
    <updated>2016-11-17T00:00:00+00:00</updated>
    <id>http://www.b3rn3d.com/blog/2016/11/17/opsec-mobile</id>
    <content type="html"><![CDATA[<p><img class="right" src="http://www.b3rn3d.com/images/mobile.png" width="300">
One of the Tor Project developers, Mike Perry, has documented the difficulties in securing a mobile device. If you haven&rsquo;t thought this through, here&rsquo;s likely how it would go:</p>

<ul>
<li>You don&rsquo;t use iOS. Apple has backdoors installed by design and don&rsquo;t listen to press releases that tell you otherwise</li>
<li>You could use a cryptophone. This was a great idea for a time when nothing else existed but unless you have a friend with another cryptophone, and a large wallet, it&rsquo;s not happening.</li>
<li>You could use a Neo900. This is not a bad idea but it&rsquo;s just not keeping up with the times.</li>
<li>Well I&rsquo;ll just lock down Android or a Linux device and make it ultra secure. Ok. Now you&rsquo;re on the same page but here&rsquo;s why that&rsquo;s so hard:</li>
</ul>


<p>If you go back to 2014, <a href="https://blog.torproject.org/blog/mission-impossible-hardening-android-security-and-privacy">Tor Project&rsquo;s blog post</a> first documented the dire state of mobile security. In short, Android has a lot of fantastic security features maligned with a variety of horrific privacy deal-breakers.</p>

<h2>Why do we need a mobile device</h2>

<p><span class='pullquote-right' data-pullquote='This dichotomy of liberation technology and privacy abandonment is a perfect example of the OPSEC struggle.'>
OPSEC is not just restricting what you do and how you act, it&rsquo;s also coming up with solutions to figure out how to do things securely. We can&rsquo;t apply a unilateral security policy on other people or simply say &ldquo;Nope. You can&rsquo;t do that.&rdquo; There simply are people that need to be able to do things that may be risky. It&rsquo;s our job to learn about technology so that we can figure out ways to do what we need to do while taking OPSEC into account.</p>

<p>Mobile is the best example of this problem. Mobile devices give us a powerful way of staying connected but we all know that a mobile device is basically a tracking device you willingly put in your pocket (and even worse than that). This dichotomy of liberation technology and privacy abandonment is a perfect example of the OPSEC struggle.
</span></p>

<h2>What can Android offer</h2>

<p>Android is not just a Linux computer in your pocket like many recite. Android is the most secure Linux environment whether or not it&rsquo;s in your pocket&hellip; but is also backdoored. Consider whether your Linux distro of choice supports these features:</p>

<ul>
<li>Sandboxed isolation for every running application</li>
<li>Hardware backed, forensic-resistant storage location for keys and passwords.</li>
<li>Verification for all system partitions at boot</li>
<li>Controlled application inter-process communication mechanism</li>
<li>Egress firewall controls and alerts</li>
<li>Controls over what an application can have access to</li>
</ul>


<p>This checklist outlines many of the goals for <a href="https://subgraph.com/sgos/index.en.html">Subgraph OS</a>.</p>

<h2>What are Android&rsquo;s problems</h2>

<p>This is much harder to list. There are a ton of problems built into Android&rsquo;s core that need to be addressed.</p>

<ul>
<li><em>Baseband</em>: all cellular devices have a baseband and no one knows what it does. This baseband can transmit your location and, even worse, has the ability to be a complete backdoor into the system.</li>
<li><em>Network controls</em>: Android&rsquo;s base OS has no egress filtering. Any application that has received the appropriate permissions can access any remote host.</li>
<li><em>Authentication controls</em>: Having a strong password on a laptop is easier than on a touch screen interface. So users will end up choosing numeric pins to protect sensitive data.</li>
<li><em>Google</em>: Just the fact that in the end Google controls all of the code and the devices but promises to release it in itself is a risk.</li>
<li><em>Others</em>: Google Play Store, WiFi scanning, binary blobs, vulnerable Linux kernels, &hellip; the list goes on.</li>
</ul>


<h2>What&rsquo;s the answer</h2>

<p>Mike Perry outlines the problems and provides a less bleak perspective on the state of mobile thanks to <a href="https://copperhead.co/android">Copperhead OS</a>, the secure from-the-ground-up Android OS. Copperhead addresses many of the items above in itself. If you have a supported device, I suggest you take a look at flashing Copperhead today.</p>

<p>The result is a phone:</p>

<ul>
<li>Anonymously routed through tor and enforced at the firewall/Netfilter level</li>
<li>Modern Linux kernel with GRSEC PAX protections built in</li>
<li>Firewall that grants users control over what an application can connect to</li>
<li>OS Source built with modern hardening methods that the base Android OS never cared to implementation</li>
</ul>


<p>But what Tor Project is doing is the same as what they did to Firefox. They didn&rsquo;t fork the code, they cloned it to make the Tor Browser Bundle. The process that they outline for their super secure phone requires that you build from source and execute a variety of scripts but all do-able. They can&rsquo;t fix everything but this is major step in the right direction or at least a short term fix to make something that we can use today.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Death to OpenPGP and GPG]]></title>
    <link href="http://www.b3rn3d.com/blog/2016/08/17/death-to-pgp/"/>
    <updated>2016-08-17T00:00:00+00:00</updated>
    <id>http://www.b3rn3d.com/blog/2016/08/17/death-to-pgp</id>
    <content type="html"><![CDATA[<p>Another set of death blows for OpenPGP came out this week. The first being a vulnerability in GPG which caused a weakening of 4096 bit keys. The second being researchers that have been able to attribute the source of RSA keys used by OpenPGP and others. I&rsquo;ve talked about my opinion (shared by many others) that <a href="http://www.b3rn3d.com/blog/2016/04/17/let-openpgp-die3/">we should let PGP die</a>. This additional cannon fodder.</p>

<p>The take away is that in the first case, I&rsquo;m going to make the case that we should all move away from using GPG and in the second case I describe how doing so becomes an attack vector. Damned on both sides.</p>

<h2>Weak in the keys</h2>

<p>A <a href="https://lists.gnupg.org/pipermail/gnupg-users/2016-August/056472.html">recent vulnerability in GPG</a> showed that if you chose the non-standard 4096 bit key size when generating your GPG keys, you are actually less secure than if you used 2048. This is caused by a vulnerability in the RNG that libgcrypt uses so that in some cases, 160bytes are predictable if the first 4640 bytes are known. In practice, the attack would mean that an attacker has access to your RNG, you generate a 4096bit key, and the attack is lucky enough to snag a portion of the 512 random bytes that are used to help generate the 4096 bit keys &ndash; a task that is not performed for the default 2048 key size.</p>

<p>You should read the original <a href="http://www.b3rn3d.com/files/libgcrypt-cve-2016-6313.pdf">white paper</a> and make your own conclusions. The researchers specifically state that they are not making any conclusions about weaknesses of RSA keys in GPG, but then on the other hand, people are talking about the <a href="https://archive.is/lYEB5#selection-245.35-245.68">comments in the patch</a> that discuss the impact on 4096 bit keys.</p>

<p>This may seem theoretical and something easy to patch but when you lump this information and the <a href="https://www.schneier.com/blog/archives/2015/02/gpg_financial_d.html">dire future that GPG has in front of it</a>, one may conclude that it&rsquo;s time to give up on GPG software completely. Ask yourself, what is an alternative OpenPGP implementation that you could use that isn&rsquo;t GPG? The answer should scare you when you consider the impact of a nation state targetting this software.</p>

<h2>Key Attribution</h2>

<p>Besides my normal gripes with OpenPGP, we have a new attack that is able to hurt those people that are trying to remain anonymous while using OpenPGP. Imagine if you will that you are off the grid, generating your GPG keys from a secure location, and completely compartmentalizing your OPSEC efforts. But you publish your keys so that others can communicate with you. And then you wake up and find an attack that is able to deduce the source of your keys.</p>

<p>The reasearch from Petr Svenda called <a href="http://www.b3rn3d.com/files/sec16_paper_svenda.pdf">The Million Key Question … Origins of RSA Public Keys</a> the premise was that there are dozens of libraries that let you generate RSA keys and each of these libraries have subtle differences in how they generate these keys. These differences can be identified based on the properties of your public key.</p>

<p>This results in being able to take anyone&rsquo;s public OpenPGP key, analyze it, and potentially determining the operating system and software used to generate that key pair. With this information attackers may be able to launch targeted attacks on your system or at least know what kind of software you&rsquo;re running. In the past, when there are fingerprinting attacks like this (e.g. Tor Browser), the best you can do is to try and get everyone to use the same software. There is obscurity in numbers. So should we recommend everyone just use GPG for all of their keys? This is in contrast to my suggestion above and may put you at an even greater risk because the alternatives will be relatively untested compared to GnuPG.</p>

<p>If you want to try the analysis tool out yourself, you can use the online tool to classify someone&rsquo;s keys here:</p>

<p><a href="https://www.fi.muni.cz/~xsekan/">https://www.fi.muni.cz/~xsekan/</a></p>

<p>For example, watch what happens what you use <a href="https://pgp.mit.edu/pks/lookup?op=get&amp;search=0xFA7F0E44D487F03F">Jacob Applebaum&rsquo;s</a> key in the above tool.</p>

<h2>What&rsquo;s Left</h2>

<p>So should we get rid of GPG and make yourself fingerprintable? Keep using GPG but let attackers know which version you&rsquo;re running? Give up on OpenPGP completely? It&rsquo;s your accepted risk in the end. I will admit that these are difficult attacks to pull of that isn&rsquo;t going to happen from any skiddy, but it depends on your threat model. I&rsquo;m less concerned about these specific issues than I am with using crappy software for security purposes. If you&rsquo;re interested in drama, there are many people that believe that GPG&rsquo;s developer is a shill for NSA interests. Do your own research and check out a <a href="http://trilema.com/2016/werner-koch-confirmed-usg-stooge/">few of the examples</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Threats of Tor Entry Guards]]></title>
    <link href="http://www.b3rn3d.com/blog/2016/06/17/tor-entry-guards/"/>
    <updated>2016-06-17T00:00:00+00:00</updated>
    <id>http://www.b3rn3d.com/blog/2016/06/17/tor-entry-guards</id>
    <content type="html"><![CDATA[<p>In recent time, Tor has made the decision to use semi-persistent entry nodes which they call this feature &ldquo;Entry Guards.&rdquo; &ldquo;Entry Nodes&rdquo; are simply the first node you connect with to join the Tor Network, but an <a href="https://www.torproject.org/docs/faq#EntryGuards">Entry Guard</a> refers to the feature of pinning the entry nodes across sessions. The Tor Project asked the question &ldquo;Is it safer to constantly change the first node you connect to or should that remain the same.&rdquo; The conclusion was by choosing a static entry node, you statistically have a much lower risk of one your circuits being compromised in the case of resourceful state actors.</p>

<p>I&rsquo;ll skip over the whole debate about why they did this. If you&rsquo;d like to read more information about why they did this, you can <a href="https://blog.torproject.org/blog/improving-tors-anonymity-changing-guard-parameters">read the article here</a>. For the sake of discussion, lets just accept this as truth and use this to highlight a situation that it creates:</p>

<h2>1. Instance Leakage</h2>

<p>In the case that you are running multiple instances of Tor, because each instance uses a static guard, that means that passive adversaries are able to identify exactly the number of tor nodes you&rsquo;re running in your network.</p>

<p>For example, you have a laptop, a relay, and some arm device that are all running Tor. In every instance, the tor binary is making a choice about its guard nodes to use. In every instance it will (probably) make a different decision. This means that passive adversaries (ISP or the like) can take known guards, and watch your connections to them, and deduce how many tor instances are on your network.</p>

<p><img class="center" src="http://www.b3rn3d.com/images/guard_static.jpg" title="Entry Guards" ></p>

<p>One of the risks I&rsquo;ve talked about in the past was the issues with the Harvard Bomb Threat where the campus network simply attributed the user because they built a list of all the people on campus using Tor. I think we should be sensitive to this attack because it&rsquo;s very low resource even for local law enforcement. In the case that your ISP is logging your actions, and a event happened in your area, the first people they are going to start tracking are the people using tor. If they can see that you&rsquo;re not only running Tor at a given point in time but 7 instances all the time, they might be knocking on your door first.</p>

<p>This issue alone is not as big as the bigger threat when you talk about traffic correlation attacks.</p>

<h2>2. Traffic Correlation Weaknesses</h2>

<p><span class='pullquote-right' data-pullquote='This recommendation is now wrong.'>
In the past, <a href="https://www.torproject.org/docs/faq.html.en#BetterAnonymity">Tor Project has recommended that you run relay alongside of a client to increase your protection against traffic analysis</a>. This recommendation is now wrong. The idea at the time was it would be hard to differentiate your traffic from relay traffic because you would be jumping around across circuits.
</span></p>

<p>Because of the static guard nodes, it is much easier to differentiate between the traffic of each different instance. The relay that you&rsquo;re running will connect to Guard A and the tor client that you&rsquo;re running will connect to Guard B. From a traffic correlation perspective, it&rsquo;s very easy to associate traffic of an individual tor instance to its traffic.</p>

<p>Here&rsquo;s an attack example: You run a tor relay that uses Guard A. You have a tor client that uses  guard B. Your adversary is able to watch traffic at your ISP and at the website you visit, www.nsa.gov, that you frequently visit with your client. If we did not use entry guards, the passive adversary would see lots of traffic going out over the tor network all the time including the traffic sent out by the client. It&rsquo;s nearly impossible to differentiate between your client traffic and your relay.</p>

<p><img class="center" src="http://www.b3rn3d.com/images/guard_dynamic.jpg" title="No Entry Guards" ></p>

<p>But now that we have entry guards, a passive adversary watches the traffic of relay connecting to Guard A and sees that it&rsquo;s a lot of consistent traffic. It then watches the traffic connecting to Guard B which is infrequent, burst of traffic. It&rsquo;s easy to tell that this is in fact a tor client. When you visit www.nsa.gov with your client, the passive adversary can easily correlate the time and size of the request with the one on the website.</p>

<p><img class="center" src="http://www.b3rn3d.com/images/guard_correlation.jpg" title="Size Correlation" ></p>

<h2>What can we do?</h2>

<p>My point is, for every network you use, you should be using the same guard nodes. If you are at a home network with 10 instances of tor, they should all be configured to use the same one.</p>

<h2>Option 1: EntryNode in Torrc</h2>

<p>If you want to specifically set what your guard nodes are, you can use the <code>EntryNodes</code> configuration option in your torrc file. Simple edit /etc/torrc with something like this:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>EntryNodes FFFFINGERPRINTOFNODE1, FFFFFFFFINGERPRINTOFNODE2, FFFFFFFFFFFFINGERPRINTNODE3</span></code></pre></td></tr></table></div></figure>


<p>This unfortunately has some costs. When you do it this way, you stop using tor&rsquo;s intelligent guard selection algorithm that will choose guards for you based on a lot of properties of the Tor Network as a whole. You might want to change this on a regular basis or just have a long list of entry nodes that you use.</p>

<h2>Option 2: Whonix</h2>

<p><a href="https://www.whonix.org/">Whonix</a> is a distro designed to be a tor gateway. It will manage a single instance of tor at the edge of your network and rather than have multiple instances of tor. Simply running a Whonix Gateway and routing your other clients connect into (ideally with the Whonix Client) will alleviate this issue. (You&rsquo;ll have to choose if you trust the Whonix disto as a whole though.)</p>

<h2>Option 3: Tor Proxy Server</h2>

<p>Don&rsquo;t forget that tor runs as a SOCKS5 proxy. Although you&rsquo;ve probably configured it to only listen on localhost, you can also configure it to be accessible on your internal network. When you setup all of the other instances of tor on your network, configure them to use the proxy server instead of 127.0.0.1:9050.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>SOCKSPort 0.0.0.0:9050</span></code></pre></td></tr></table></div></figure>


<p>I wouldn&rsquo;t really do this for a variety of reasons. If you want to actually do this and put some protection on this service, see the <a href="https://www.torproject.org/docs/tor-manual.html.en#SOCKSPort">TORRC details about SOSKPort flags</a> so you don&rsquo;t get yourself in trouble. Don&rsquo;t forget, SOCKS is a cleartext protocol.</p>

<h2>Option 4: Bridges</h2>

<p>If you aren&rsquo;t running a Relay, and you&rsquo;re simply concerned about your standard traffic analysis attacks or counting tor instances you have on your network, you can configure your tor clients to use a <a href="https://www.torproject.org/docs/bridges">bridge service</a>. This will make it more difficult to detect that you&rsquo;re using tor in the first place and skip around the issue completely.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>185.100.84.187:57092 158A7DD6EDCA9041D7FA6ED7593E7BB43F82BD84
</span><span class='line'>88.198.74.99:9001 3D6269A43BB28423D1127008A182EB07DBB39C00
</span><span class='line'>199.231.94.203:443 0872E07DE33BEE2EB5D6A9941EBF30885A5D80D7</span></code></pre></td></tr></table></div></figure>


<h2>Option 5: Disable Entry Guards</h2>

<p>The tor configuration file allows you to not use entry guards at all. If for some reason you&rsquo;ve come to the conclusion that using a guard makes you less secure in your environment, dump them completely. This means that whenever a circuit is built, it will likely have a completely different entry node.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>UseEntryGuard 0</span></code></pre></td></tr></table></div></figure>


<h2>Warnings</h2>

<p>All of this being said, let me add the warning that making these configuration changes may cause more damage than when you started. It&rsquo;s important to understand what the threats are and you can determine if this is important to your operation. If you are a standalone tor client user, there&rsquo;s probably no reason for you to make customizations.</p>

<p>You should also note that if you somehow make your entry nodes static and you are on a mobile device, this could be a way of tracking you across sessions. If you take your laptop from your apartment to a coffee shop and there is somehow a way of collecting the traffic of both of them, they could correlate your entry guard usage across connections.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OPSEC for New Police Tools]]></title>
    <link href="http://www.b3rn3d.com/blog/2016/04/17/opsec-for-new-police/"/>
    <updated>2016-04-17T00:00:00+00:00</updated>
    <id>http://www.b3rn3d.com/blog/2016/04/17/opsec-for-new-police</id>
    <content type="html"><![CDATA[<p>There&rsquo;s a <a href="http://www.independent.co.uk/life-style/gadgets-and-tech/texting-gun-could-help-law-enforcement-spot-drivers-using-their-phones-behind-the-wheel-9748065.html">news report</a> recently about how a company named ComSonics
plans to release a tool called Sniffer Sleuth that will be able to detect when
a driver is sending a text message by sniffing the RF of the cell phone. The secondary
use of this type of technology could completely irradicate the use of burner phones.</p>

<p>First of all, let me begin by saying this is all vaporware. This doesn&rsquo;t exist
and what they&rsquo;re calling &ldquo;<a href="http://www.comsonics.com/assets/product-assets/SleuthDataSheet.pdf">Sniffer Sleuth II</a>&rdquo; is just a way for cable TV providers
to detect leakage. If I had to guess, I would say that ComSonics truly is working
on such a solution, but they need government funding which is why they did a
press release.</p>

<p>Lets look ahead at this stupid device and the implications.</p>

<h2>The Advertised Purpose</h2>

<p><span class='pullquote-right' data-pullquote='it would make it reasonable enough to issue a
search warrant to access that phone'>
What such a device is advertised to do, is say that police can point a device at a car
and determine whether or not the RF usage it collects is related to texting. This would correlate to whether the
driver is texting while driving. It is possible to determine if data is
being sent or received by sniffing various radio bands. It is questionably possible to
determine if someone is sending a text message let alone that it originated from
the driver, or a passenger, or a car next to that person.
In practice, such a technology could not be easily used to definitively determine if
someone was texting while driving, but it would make it reasonable enough to issue a
search warrant to access that phone.
</span></p>

<p>If we take that for what it is, it&rsquo;s very easy to protect ourselves. Don&rsquo;t text and drive.</p>

<p>And if you&rsquo;ve met Police officers, you may have met one that will slant the truth a bit
in order to drive home a point. They may tell you blatant lies with altruistic intentions.
This I believe is what this news article is. They&rsquo;re planting FUD about Police
capabilities to help stop people from texting while driving.</p>

<p>Let&rsquo;s get on to the scary part.</p>

<h2>The Real Purpose</h2>

<p>Let&rsquo;s say, for the sake of discussion, that this device does exist, or some attempt at it exists.
We should not be overly concerned about Police somehow finding us texting and driving.
What you should be concerned about is that this technology will be used just like the
license plate scanners.</p>

<p>In the US, all police cars from the State Police down to the local Sheriffs are outfitted
with a license plate scanner. These scanners are never turned off and will constantly be
on the hunt for license plates.</p>

<p>The worse part is that these scanners are hooked into the federal network of scanners
so the FBI at any given point in time, purportedly can do a search for various license
plates across the whole country.</p>

<p><span class='pullquote-right' data-pullquote='This would effectively kill the idea of burner
phones'>
Now imagine taking a license plate scanner and attaching it to a device that can determine the
phone number (or IMEI/IMSI) of the device. This would effectively kill the idea of burner
phones. Police would be able to correlate a mobile device, to a car and because cars
are much more difficult/expensive to hide your personal information from it would mean
that a burner phone, no matter how often you switch them, would be easily attributed to
a name and an address.
</span></p>

<p>Notice that these capabilities theoretically exist and things like Sting Rays are already
designed to capture and track cell phone data. The system that I&rsquo;m talking about
would correlate the two data points which AFAIK does not exist at the local level.</p>

<h2>OPSEC</h2>

<p>So how would one defend against this? And this is the reason for this post:
There isn&rsquo;t much you can do.</p>

<ul>
<li><strong>Ditch the phone</strong>: You of course could not use a phone completely
and we know there are already existing attacks on the baseband that might suggest
this s the best move.</li>
<li><strong>Faraday Cage</strong>: You could start thinking about how to hide the RF that is leaking
from your phone by putting it in a Faraday cage.</li>
<li><strong>License Plate Obfuscation</strong>: You can take your burner phone, and try to turn your
automobile into a burner car by hiding your license plate or changing the number. This is
a whole separate subject but if effective, would mean that LEO&rsquo;s would not be able to
correlate your car to your phone.</li>
</ul>


<p>I&rsquo;ll keep watching this company but like I said this is all just in discussion. You can see
how little details exist if you do a news search for &ldquo;Sniffer Sleuth.&rdquo; Not only will you
find similar articles, you&rsquo;ll find articles with the exact same text copied and pasted
out of the original news feed.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Reasons to Let PGP Die #3: Outdated Crypto]]></title>
    <link href="http://www.b3rn3d.com/blog/2016/04/17/let-openpgp-die3/"/>
    <updated>2016-04-17T00:00:00+00:00</updated>
    <id>http://www.b3rn3d.com/blog/2016/04/17/let-openpgp-die3</id>
    <content type="html"><![CDATA[<p>There are some crypto problems with PGP. And at first you might go &ldquo;Yeah right, I use 4096bit RSA keys&rdquo; but let me explain.</p>

<h2>No Perfect Forward Secrecy</h2>

<p>Forward secrecy is the idea even if you lose your encryption keys and the attacker is able to intercept the communications between you and another party, they still would be unable to see what you sent them. This is normally accomplished by using a long term key, to negotiate two short term, session keys. This is the basis of what Diffie-Hellman provides.</p>

<p>Sounds cool right? You want that right? If you use PGP, it&rsquo;s not possible. The risk here is that when you generate your key, and your key is compromised, this is an ultimate loss. There&rsquo;s nothing you can do to prevent an attacker from being able to decrypt something that was previously encrypted.</p>

<p>Let me give you an example of how bad this is. Let&rsquo;s say that you realized you were undersurveillance and that you decided that you were going to encrypt your communications with PGP. You knew full well that the surveillance continued but without your private PGP key, there was nothing they could do. The people surveilling you would record every email you sent and just keep them. Flash forward 2 years when there is an Adobe Flash 0'day and someone uses it to compromise your GPG key. Upon compromise, they can use your keys to decrypt all of the old emails. Everything. There&rsquo;s nothing you can do.</p>

<h2>Crypto Weakness</h2>

<p>When PGP first came out, they recommended using a 1024 RSA certificate to protect the messages. You should now know that 1024 is not considered strong by any means and should not be used. Look into the future and imagine what the cryptographic standards might be in 5 years, 10 years, or 20 years. You must assume there will be cryptographic advances to make it easier to crack RSA or even ECC certificates.</p>

<p>The problem is that if someone was watching your communications, storing them, and hoping to decrypt them later, this will eventually become easier. If they took your PGP encrypted messages you used in the 90&rsquo;s, it&rsquo;s likely they can easily crack them with enough power.</p>

<p>Even if you might say, &ldquo;No big deal, I&rsquo;ve revoked those certificates and I use a new one&rdquo; the issue is all of your previous communications are done and you can&rsquo;t re-encrypt them.</p>

<p>They just started adding support for ECC in the 2.1 branch of GPG but they are still far away from Quantum resistent algithm support. You should expect that your ultra secure software should invest time to at least be up-to-date in which cryptographic primitives it uses.</p>

<h2>Fixes?</h2>

<p>This is one of those ultimate killers. There&rsquo;s no fix to flaws in cryptography in this case. You could somehow bolt-on a system that builds short-term session keys for encrypting messages which would help in both issues above. Maybe come up with a way of layering encryption to reduce the liklihood of it being cracked. But that&rsquo;s now how PGP works and we&rsquo;re talking about a completely different, two-way negotiation based system that isn&rsquo;t possible over PGP or SMTP.</p>

<p>If you must use PGP, you should ask yourself, in 5 years, will I be in trouble if anyone reads this? What about in 10? What if your kids and grandkids are able to read this message. That may help you decide when and how to use PGP.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Reasons to Let PGP Die #2: Web-of-Trust]]></title>
    <link href="http://www.b3rn3d.com/blog/2016/04/15/let-openpgp-die2/"/>
    <updated>2016-04-15T00:00:00+00:00</updated>
    <id>http://www.b3rn3d.com/blog/2016/04/15/let-openpgp-die2</id>
    <content type="html"><![CDATA[<p>In my continued series hate on PGP, I wanted to cover why PGP should die by using the web-of-trust as an example.</p>

<h2>History of the WoT</h2>

<p>PGP was invented in the 90&rsquo;s as a way of bolting on security on top of the ultra insecure SMTP spec. The web-of-trust was designed similarly to how we designed DNS back then &ndash; distribute trust across multiple sources. But unlike DNS that had a hierarchy of trust, PGP&rsquo;s young idealist authors thought that we could decentralize trust and let everyone on the client side build up trust networks themselves.</p>

<h2>Social Graph</h2>

<p>Surround your pullquote like this {&ldquo; text to be quoted &rdquo;}</p>

<p>Here&rsquo;s a graph of all the people that have been in contact with each other:</p>

<h2>Kill The Keyservers</h2>

<p>For people that are sharing their information on Facebook, this is in-line with their OPSEC. Share everything, and don&rsquo;t worry about privacy. But for those of us that actually would like to maintain their privacy and ideally some sorts of pseudonymity, this is a deal breaker.</p>

<p>Not only is this a graph of all the people you&rsquo;ve met, the keyserver will maintain a log of all people that have downloaded your particular key. Even if the person isn&rsquo;t contributing to the WoT, if they use the keyserver, it can be assumed that you mean to communicate with that person.</p>

<h2>Fixes?</h2>

<p>This is the one of the primary reasons PGP should die. If you say that you aren&rsquo;t going to use a keyserver such as MIT&rsquo;s, there-by evading the WoT, you have no place to put your PGP key and you have no way of checking to see if someone else&rsquo;s key server exists. Keyservers are a crucial element in the OpenPGP standard.</p>

<p>You can however decide not to use keyserers if you already have an established band of communication outside of email. If you have a website, business card, or some other form of anonymous communication, you can dump your public key in that location.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Reasons to Let PGP Die #1: Metadata]]></title>
    <link href="http://www.b3rn3d.com/blog/2016/04/11/let-openpgp-die/"/>
    <updated>2016-04-11T00:00:00+00:00</updated>
    <id>http://www.b3rn3d.com/blog/2016/04/11/let-openpgp-die</id>
    <content type="html"><![CDATA[<p>PGP is a 90&rsquo;s protocol that should have died along with SMTP. I&rsquo;m tired of it and how we&rsquo;re still trying very hard to use it. I&rsquo;m going to start reminding us about the various reasons PGP should die.</p>

<h2>Metadata</h2>

<p>Lets cover metadata first. Things that are leaked outside of your normal message. We already know that metadata is easy to extract from a plaintext SMTP message, but its actually even easier from a PGP encrypted message.</p>

<h2>Example</h2>

<p>Here&rsquo;s a interesting experiment. First run</p>

<blockquote><p>echo &ldquo;security&rdquo; | gpg -ea -r <a href="&#x6d;&#x61;&#x69;&#108;&#x74;&#x6f;&#58;&#x63;&#x69;&#x6e;&#x63;&#105;&#110;&#x6e;&#x61;&#116;&#117;&#x73;&#64;&#108;&#97;&#118;&#97;&#98;&#105;&#116;&#46;&#99;&#x6f;&#x6d;">&#99;&#105;&#x6e;&#x63;&#105;&#110;&#x6e;&#97;&#x74;&#117;&#115;&#x40;&#108;&#97;&#118;&#x61;&#98;&#105;&#116;&#46;&#99;&#x6f;&#109;</a></p></blockquote>

<p>You will get something like this:</p>

<pre><code>-----BEGIN PGP MESSAGE-----

hQQMA0x0OAr3LYCzASAAqBaeXxmDctWPmgFCDWEVjxeiG6bCf8/Co5Y8ZOUt7vtb
...
</code></pre>

<p>Then on that file, do a</p>

<blockquote><p>gpg &ndash;list-only</p></blockquote>

<p>If you have the public key, you&rsquo;ll see something like this which shows the message was encrypted to Edward Snowden&rsquo;s old PGP key.
    gpg: encrypted with 8192-bit RSA key, ID F72D80B3, created 2012-09-02
      &ldquo;Cincinnatus (Tor) <a href="&#x6d;&#x61;&#105;&#x6c;&#x74;&#111;&#58;&#99;&#105;&#x6e;&#x63;&#105;&#x6e;&#110;&#x61;&#116;&#x75;&#x73;&#64;&#108;&#x61;&#118;&#97;&#x62;&#105;&#x74;&#x2e;&#99;&#x6f;&#109;">&#99;&#105;&#x6e;&#99;&#x69;&#110;&#110;&#97;&#x74;&#117;&#x73;&#64;&#108;&#97;&#118;&#x61;&#98;&#105;&#116;&#46;&#99;&#111;&#109;</a>&rdquo;</p>

<p>But look at this:</p>

<blockquote><p>echo &ldquo;security&rdquo; | gpg -ea &ndash;hidden-recipient <a href="&#x6d;&#x61;&#105;&#108;&#116;&#111;&#x3a;&#x63;&#105;&#110;&#99;&#105;&#x6e;&#x6e;&#97;&#x74;&#117;&#x73;&#64;&#108;&#x61;&#x76;&#x61;&#x62;&#x69;&#x74;&#x2e;&#99;&#x6f;&#x6d;">&#99;&#105;&#110;&#x63;&#105;&#x6e;&#x6e;&#97;&#116;&#117;&#115;&#64;&#108;&#x61;&#x76;&#x61;&#x62;&#x69;&#116;&#x2e;&#99;&#x6f;&#109;</a></p></blockquote>

<pre><code>-----BEGIN PGP MESSAGE-----
Version: GnuPG v1

hQQMAwAAAAAAAAAAAR/+O7sldU8CMp7xZE9aPaOoIgb3i7GumO0mGlkhCZ3JDLhB
...
</code></pre>

<p>Notice the A&rsquo;s in the beginning. What you&rsquo;ve done is 0&rsquo;d out the key ID of the intended recipient.</p>

<h2>What does this mean</h2>

<p>If you are a normal PGP user, the first block in your message is a list of the keyids that it is encrypted to. If you were someone with the ability to intercept communications, you had better believe that PGP encrypted messages are going to be a high value find.</p>

<p>Those people that are using PGP to protect their communications and not using something like HTTPS or SMTPS will be subject to very simple graphing of who and when you are talking to other recipients.</p>

<h2>Can it be fixed</h2>

<p>You can use <code>--hidden-recipient</code> as a drop in replacement for the <code>-r</code> flag. Even better, Enigmail, the PGP plugin for Thunderbird, will automaticaly do this for you when you send messages to people via BCC.</p>

<p>You should note that when you use this switch, gpg has no idea how to decrypt incoming messages so it just tries every single one of your private keys.</p>

<p>Lets let PGP die.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The Internet of Threats]]></title>
    <link href="http://www.b3rn3d.com/blog/2016/04/08/internet-of-threats/"/>
    <updated>2016-04-08T00:00:00+00:00</updated>
    <id>http://www.b3rn3d.com/blog/2016/04/08/internet-of-threats</id>
    <content type="html"><![CDATA[<p>The FBiOS stories have reminded me about how many concessions we make to our OPSEC when we buy consumer products. I&rsquo;ll not turn this into a diatribe about Consumerism but I thought it might be a good reminder to us all (myself included) that we should be weary of the products we purchase and their implications. We know about the threats of a mobile phone being able to track your location, read your text messages, and all kinds of scary &ldquo;features&rdquo; but the new consumer devices with network access may be the next scary beast.</p>

<h2>Fear Your Toys</h2>

<p>All of those products that are installing IP&rsquo;s into your otherwise benign devices are a super high risk. Yes you&rsquo;ve heard this before, yes you know about it, but how many have you purchased and what do they do? If you are someone that is at least privacy conscious, think about making privacy conscious decisions.</p>

<p><img class="right" src="http://www.b3rn3d.com/images/hackerbarbie.jpg" title="Hacker Barbie" ></p>

<p>In the security industry people like to call any security research related to them &ldquo;RubbishSEC&rdquo; referring to the idea that whenever someone talks about hacking one of these devices, they&rsquo;re hacking a pile of trash that has no real security protections. And this is my point. It&rsquo;s true that your Nest doesn&rsquo;t have a lot of security protections but we accept this because &ldquo;it&rsquo;s a consumer device.&rdquo;</p>

<p>Manufacturers see consumers as people that do not care about security. They don&rsquo;t care about privacy or OPSEC or what types of threats their product introduces into the consumers' environment.</p>

<p><span class='pullquote-right' data-pullquote='owning a Barbie Doll is analogous to running telnet'>
Our flashy new consumer devices that have access to the Internet are not just toys, they are risk factors. Use for example the <a href="http://www.theguardian.com/technology/2015/nov/26/hackers-can-hijack-wi-fi-hello-barbie-to-spy-on-your-children">childrens doll security issue</a>. You might now think that owning a Barbie Doll is analogous to running telnet. In the same way that we wouldn&rsquo;t run unnecessary services on our computers, we shouldn&rsquo;t use hackable consumer devices in our homes. Think of your home or apartment right now. What do you have that has network access and what does it provide you?
</span></p>

<h2>Defending Against Your Barbie</h2>

<p>You have options to defend against the Toy Robot Uprising. You can take the activist stance and say &ldquo;I am not buying these products!&rdquo; and good for you if you can. Some of us that are weaker cannot do this and have become addicted to some of these consumer products. What then?</p>

<p>Just like QubesOS and Subgraph OS have created compartments for high risk processes, do the same for for you toys. There&rsquo;s a new technology called a &ldquo;toy box&rdquo; that is designed to be a container for all of your IoT devices. :) That&rsquo;s only half a joke. As I&rsquo;ve said over and over, if you want to live two lives in the dark and in the light, you have to compartmentalize.</p>

<ul>
<li>Put your Barbie on her own wireless network.</li>
<li>Make sure that your refrigerator cannot connect to your laptop.</li>
<li>Lock your toys away when you&rsquo;re not playing with them</li>
<li>Unplug and disable devices when they&rsquo;re not in use</li>
<li>Learn as much as you can about how they work.</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Growing a Flower in the Dark]]></title>
    <link href="http://www.b3rn3d.com/blog/2016/03/11/opsec-and-ego/"/>
    <updated>2016-03-11T00:00:00+00:00</updated>
    <id>http://www.b3rn3d.com/blog/2016/03/11/opsec-and-ego</id>
    <content type="html"><![CDATA[<p><img class="right" src="http://www.b3rn3d.com/images/dark_flower.jpg" width="200" title="Dark Flower" ></p>

<p>I like to use the metaphor of growing a flower to discuss the issues of OPSEC. It works on a couple of levels and I hope it can help delver my points. You can&rsquo;t use the same tools to grow a flower in the dark that you might normally: sunlight, access to water, fertilizer. You are human. You have needs. You need to eat, you need to sleep, you need to have a reason to do things that you do. Like the flower in the dark, our OPSEC may restrict our ability to feed our human needs.</p>

<p>Psychological human needs often get in the way of your operation.</p>

<ul>
<li>Loneliness</li>
<li>Self worth</li>
<li>Motivation</li>
</ul>


<p>The first step is recognizing that these are real, useful needs, and they should not be denied. Next we should figure out how to feed them. There are really two ways of looking at the situation to help you deal with them: Plan to ensure these feelings never happen or plan how to deal with these feelings <em>when</em> they happen.</p>

<p><span class='pullquote-right' data-pullquote='feeding these needs may negatively impact your OPSEC policy, but not feeding these needs could have much more serious consequences.'>
I&rsquo;ll discuss some of the issues as well as some recommendations but as you&rsquo;ll see, my recommendations are in direct contrast to a good OPSEC plan. The first concession you need to make is that feeding these needs may negatively impact your OPSEC policy, but not feeding these needs could have much more serious consequences.
</span></p>

<h2>The Drought of Loneliness</h2>

<p>Depending on your OPSEC and operation, you are lonely. You sit in your cheap flat, with your secure computer, and nobody knows that you exist.</p>

<p>Let me feed my ego a little bit and disclose an anecdote. I&rsquo;ve spent weeks in locations not being able to communicate with anyone. If I am able to communicate, it is high latency and multiple days before a response. The lonleiness creeps in and as any tech savvy person in this decade does, they reach online for contact. A chat on IRC, darknet forums, whatever.</p>

<p>For me, the loneliness breeds different feelings; depression, laziness as well as a myopic focus on the task at hand. When you have nothing else to do, you go to work. Take care of the operation. Plan, review, and plan some more. There&rsquo;s nothing else to do.</p>

<p><span class='pullquote-right' data-pullquote='you can’t be constantly watering your dark flower.'>
If your operation takes up a lot of your time, that&rsquo;s a good way of keeping your mind busy but if your plans have lots of periods of inactivity, and you must wait for things before you can continue; you can&rsquo;t be constantly watering your dark flower. This is when the lonliness creeps in and its best to recognize that this will happen and think of ways of fixing it.
</span></p>

<p>Here are some suggestions that work for me and hopefully you:</p>

<ul>
<li>Meet people in an agnostic setting such as a book club, pub, or sporting event. Be weary of topics and information that are discussed but if you need human interaction, this is a good way of doing it.</li>
<li>Find an out-of-band low latency communication network. Connect to IRC or Twitter from an Internet cafe. Ensure you&rsquo;ve compartmentalized everything properly and you&rsquo;re not using the same network connection as your main operation, but if you need to talk to someone.</li>
<li>Make a friend. Yes this sounds simple or scary depending on the person but meeting a friend or partner you can confide in helps a lot. They might not be able to come over and visit you and you might seem like you&rsquo;re a very private person to them, but sometimes having a short conversation about the weather is all you need to remind you that you&rsquo;re connected to the rest of the world.</li>
<li>Attend a public event. I&rsquo;ve found that even if I&rsquo;m not interacting with people, being a fly on the wall at a very large event makes me feel less lonely. Even a bit of eye contact helps make you feel better.</li>
<li>Phone hotlines. I&rsquo;ll be honest, I&rsquo;ve never done this but a friend suggested it and swears by it. They suggested a suicide hotline but I feel that&rsquo;s a bit crazy especially as these services are designed to track your location. Phone sex services are usually expensive too. If you can find some kind of free hotline service that lets you use your burner phone, maybe this is something for you.</li>
</ul>


<h2>The Sunlight of Self Worth</h2>

<p>We know that <a href="blog/2015/02/04/ego-and-opsec/">your ego can get in the way of your OPSEC</a> and all you can do is recognize that, be as disciplined as possible, compensate for what&rsquo;s missing, and continue on. Your self worth is an inner conversation that defines you as a person. What are you good at? What are your best traits? Do you have a place in the world where you can deliver these skills?</p>

<p><span class='pullquote-right' data-pullquote='these people are trying to feed their self worth and the more obnoxious they seem, the more starving they are for external validation.'>
You&rsquo;ve likely met someone that has an inflated sense of self worth. They&rsquo;re pompous about every thing they do and they aren&rsquo;t afraid of sharing it. Understand that these people are trying to feed their self worth and the more obnoxious they seem, the more starving they are for external validation.
</span></p>

<p>You may not be one of these people now but as your flower tries to grow in the shade, it will miss the warmth of the sun. You can&rsquo;t just show off your operations in the light of the day or on a clearnet site. You can&rsquo;t post on Reddit and read through the comments]to see if people like you.</p>

<p><a href="https://www.reddit.com/r/onions/comments/28tpxg/liberte_tor_distro_forces_screen_resolution/">Maybe you can</a>. But let me say that in my experience, if you start questioning the value of your operation or your own personal self worth, you will start making concessions about what you&rsquo;re willing to do or share to try and feed it. You&rsquo;ll start thinking about chatting about it on IRC or Twitter and looking for something. Understand that searching for external validation is normal but make sure you stay vigilant about your OPSEC.</p>

<p>It&rsquo;s hard to provide generalized recommendations for you. This is a question about your own personal feelings, motivation, and operation. Here&rsquo;s again, IMHO, some things you can try:</p>

<ul>
<li>Make a blog! A bit tongue-in-cheek but if I&rsquo;m honest, the entire purpose of this blog is to help me stay vigilant with my operations. The positive feedback is what keeps this going and at least makes me feel like I&rsquo;m useful. I am in fact at this moment, attempting to feed my self worth. :)</li>
<li>Meet like-minded peers. The term &ldquo;community&rdquo; is often nothing more than a circle of like-minded people aimed at validating each others' sense of worth. Join a community. Find people that do what you do and make some responsible disclosures while maintaining your pseudonymity.</li>
<li>Share your results with the world. If you have an operation with an output that could improve the world, share it. Watch how good it feels to see that other people appreciate the effort you&rsquo;ve put in.</li>
<li>Be honest about your operation and if you really have come to the conclusion that it&rsquo;s not worth your effort, shut it down. Do so in a controlled way.</li>
</ul>


<h2>Feeding Your Motivation</h2>

<p>Don&rsquo;t underestimate the need for motivation. At the beginning of your operation you will be very motivated. You&rsquo;ll have goals and aspirations and you&rsquo;ll be truly excited to accomplish your tasks. Without proper maintenance, these feelings fade.</p>

<p>In the best case, the result is that the operation expires. You don&rsquo;t continue. It atrophies and you let it die but there are no real risks in you doing this. Some operations aren&rsquo;t as lucky. If you don&rsquo;t maintain the operation or shut it down cleanly, you put yourself at risk. What happens if someone finds out your ran the operation years later? Is there anything that might identify you?</p>

<p>Motivation is what feeds your dark flower. Without enough motivation, you will simply not grow, become stale, and eventually wilt away. How can we stay motivated:</p>

<ul>
<li>Start an operation, and write down exactly why you are doing this in the most detail possible. Yes this is a risky proposition but if you can keep it secure, it can serve as an affirmation on the days when you&rsquo;re questioning whether you should be doing what you do.</li>
<li>If your operation is related to some moral or ethical motivation, review the reasons you chose to do this. Read articles and papers about what made you want to do this in the first place. If you&rsquo;re a hactivist, remind yourself of the bad things and why you&rsquo;re trying to be on the good side.</li>
<li>Limit outside influence. In contrast to the last suggestion, don&rsquo;t read anything. Don&rsquo;t let articles, comments, or TV shows suck out your motivation.</li>
</ul>


<p><span class='pullquote-right' data-pullquote='spend a few hours thinking about the meat bag that’s actually running your operation.'>
If you think all of these suggestions and discussion does not apply to you, let us at least agree that our physical and psychological needs are paramount. If you&rsquo;ve spent hours on securing your laptop, network connection, and built an OPSEC policy, spend a few hours thinking about the meat bag that&rsquo;s actually running your operation. I hope that this serves as a reminder to not only plan for the technical details, but also find ways to grow your flower in the dark.
</span></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mass Surveillance for the Masses]]></title>
    <link href="http://www.b3rn3d.com/blog/2016/03/05/pratical-opsec/"/>
    <updated>2016-03-05T00:00:00+00:00</updated>
    <id>http://www.b3rn3d.com/blog/2016/03/05/pratical-opsec</id>
    <content type="html"><![CDATA[<p><img class="right" src="http://www.b3rn3d.com/images/nypd_camera.jpg" title="NYPD Camera" ></p>

<p>I really like learning about new OPSEC tactics, especially if they&rsquo;re done
by the non-tech savvy. Below we talk about the threat model of a Harlem
residents and their defensive tactics.</p>

<h2>Harlem: Surveillance Hipsters</h2>

<p>New York City&rsquo;s, Harlem, is home to the city&rsquo;s lower income population. Not
impoverish but, not Manhattan. Harlem has had an illustrious history being
targeted by NYPD and other forms of law enforcement. Surveillance is part of
every-day life. Who better to give us some perspective on dealing with mass
surveillance on a day-to-day basis.</p>

<p>Harlem residents aren&rsquo;t concerned about NSA or GCHQ. They have a local
surveillance issues to deal with:</p>

<ul>
<li>Surveillance from their employers who install cameras to watch them work.</li>
<li>Surveillance from the local NYPD who have installed street cameras on the
corners that they know are not installed in Manhattan.</li>
<li>Surveillance from ex-boyfriends on Facebook who are keeping track of who
they talk with or what parties they go to.</li>
</ul>


<p><span class='pullquote-right' data-pullquote='You
might not find their tactics useful, but it serves as a remember that
OPSEC is dependent on the threat model.'>
They have a different threat model compared to the nation-state dissident. You
might not find their tactics useful, but it serves as a remember that
OPSEC is dependent on the threat model. Someone hiding from the government
employs different tactics than someone hiding from their ex-boyfriend. The
threats are one in the same.
</span></p>

<h2>Family Plan Surveillance</h2>

<p>The US has &ldquo;Family Plans.&rdquo; These are cell
phone plans that you share with trusted friends and family to
can keep your bill to a minimum. But what happens when you no longer trust
someone on the plan? You don&rsquo;t kick them off. You ignore them. It&rsquo;s cheaper.</p>

<p>For some of these sketchy carriers, a member of the plan can:</p>

<ul>
<li>Get access to a backup of the phone&rsquo;s contact lists</li>
<li>Read text messages</li>
<li>Get the call records for the account</li>
<li>Track the location of a phone using a &ldquo;Find My Phone&rdquo; app</li>
</ul>


<p>This is their threat. On a day-to-day basis they aren&rsquo;t worried about the FBI
cracking down on them, they&rsquo;re worried about their ex-boyfriend stalking them.</p>

<h2>Social Lions</h2>

<p>We know that LEO&rsquo;s will keep track of social networking in their jurisdiction.
NYPD has invested millions to keep track of this effort. This is done in one
of a few ways. Most common of which, NYPD will make a request to Facebook for
access to a specific facebook account. I&rsquo;m told that 80%-90% of the time,
Facebook does not contest these requests and as long as it&rsquo;s coming from an
attributable law enforcement office, they&rsquo;re provided without any oversight.</p>

<p>The other more nefarious <a href="http://www.theverge.com/2014/12/10/7341077/nypd-harlem-crews-social-media-rikers-prison">tactic that NYPD specifically uses</a> is to generate
fake accounts and target individuals in the neighbor hood. Keep track of their
friends, watch what parties they go to, see what people are talking about.</p>

<p>The people in these neighborhoods know this is happening in the same way that
they know the street cameras in the streets are keeping track of them.</p>

<h2>Harlem OPSEC</h2>

<p>For the non-tech savvy, their tactics are brilliant. They include:</p>

<ul>
<li><strong>Emoji-contacts</strong>: Never saving their friends names in their phone. Use emoticons instead. Smiley
face is a new boyfriend. Cake is your friend from the club. Happy penguin is
your pot dealer.</li>
<li><strong>Never using iPhones</strong>: They don&rsquo;t trust these devices and their tracking
capabilities. Instead use a cheap Android device they feel can&rsquo;t track them
as accurately.</li>
<li><strong>Don&rsquo;t use SMS</strong>: Use messaging apps like snapchat for messages with new boyfriends. They know
that these are protected and don&rsquo;t show up on the records for the account.</li>
<li><strong>Watch Out Who Friends You</strong>: They believe that the NYPD is &ldquo;Cat Fishing&rdquo;
them to learn about their social circles and keep track of things they post
that might be illegal.</li>
</ul>


<p>Look, these aren&rsquo;t tactics that a tech-savvy person would use, but they show
real-world examples of different kinds of threats and ways to compensate for them.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using a VPN With Tor]]></title>
    <link href="http://www.b3rn3d.com/blog/2016/02/08/vpn-and-tor/"/>
    <updated>2016-02-08T00:00:00+00:00</updated>
    <id>http://www.b3rn3d.com/blog/2016/02/08/vpn-and-tor</id>
    <content type="html"><![CDATA[<p><img class="center" src="http://www.b3rn3d.com/images/torvpnsilly.png"></p>

<p><span class='pullquote-right' data-pullquote='Should I use Tor to VPN into a VPN to connect to Tor via VPN… with Tor.'>
The question comes up semi-regularly: &ldquo;Should I use a VPN to connect to Tor?&rdquo; and &ldquo;Should I use Tor to connect to a VPN?&rdquo; and various combinations of Should I use Tor to VPN into a VPN to connect to Tor via VPN&hellip; with Tor.
</span></p>

<p>The developers at the Tor Project (whom I respect immensely and believe know what they&rsquo;re talking about) have a unilateral policy for this to never use a VPN to connect to Tor. Here&rsquo;s a snippet from a recent discussion on the <a href="http://archives.seul.org/tor/talk/">tor-talk mailing list</a>:</p>

<blockquote><p>...if somebody somehow breaks the anonymity of your Tor<br/>circuit, it's nice to have another layer behind that. But if somebody guesses that you're using a particular VPN, or you pick a VPN that they're already monitoring for other reasons, then you basically let them see the beginning of your circuit when otherwise they might not have been able to.</p><footer><strong>Roger Dingledine</strong> <cite><a href='http://archives.seul.org/tor/talk/Jan-2016/msg00225.html'>Tor-talk</a></cite></footer></blockquote>


<p>In this he&rsquo;s saying if you&rsquo;re using a VPN to connect to Tor, you&rsquo;re putting yourself at greater risk because the VPN service has a log of your information, your connection times, and the fact that you made a connection to Tor. This is supposed to be higher risk because if a nation state decided to perform passive monitoring, the place they would start is the VPNs. (He also compares this to having a consistent first hop guard node that everyone uses but I&rsquo;ll leave that debate for another day.)</p>

<h2>He&rsquo;s Right&hellip; Sometimes</h2>

<p>Dingledine&rsquo;s logic is sound and if one were to have a policy to share with a community, it should be this one because it puts the least amount of risk on tor users. But, as with most things related to security, a unilateral policy is not always the best one. You need to know your <a href="http://www.b3rn3d.com/blog/2014/01/10/ask-him-about-his-threat-model/">threat model</a>.</p>

<h2>The Case of the Harvard Bomber</h2>

<p>There is a now <a href="http://edition.cnn.com/2013/12/17/justice/massachusetts-harvard-hoax/">famous case of student at Harvard</a> who had not finished studying for his finals and decided he wanted to email a bomb threat into the school to stop tests from happening. He went back to his dorm room, fired up Tor Browser, and sent an email from Guerrilla Mail to the school.</p>

<p><img class="right" src="http://www.b3rn3d.com/images/eldo.png"></p>

<p>In this case, tor protected his anonymity. The email could not be traced back through the Tor network and to his IP address. Tor did it&rsquo;s job. His downfall was that he made the connect to Tor from his dorm room. The university admins simply went back and found all the tor connections at the time of the email, and found that it was a very small segment of students. The police went to each of those students and eventually found their man.</p>

<p>What if the Harvard Bomber used a VPN to first connect into Tor? Would it have saved him? Maybe, or at least it would have made it more difficult. He would connect into the VPN service used by hundreds or thousands of other people, and then connect into the Tor Network. This might mean that even when they noticed the Tor traffic, they wouldn&rsquo;t be able to attribute it to a specific student because there would be no log of them connecting to the Tor network. (That being said, Harvard could subpoena the VPN provider and try to determine which of the VPN users were from Harvard and which of them connected through Tor but I&rsquo;m trying to make a point. :) )</p>

<h2>When to VPN > Tor</h2>

<p><img class="center" src="http://www.b3rn3d.com/images/vpntor.png" title="VPN > Tor" ></p>

<p>Here&rsquo;s when you <em>might</em> want to use a VPN to connect into Tor:</p>

<ul>
<li><strong>Geographic fingerprinting</strong>: You are from a small village with not very many Tor users. If there was a suggestion that sketchy activity has happened, they would knock on your door first. Especially if your operation was geographically specific (like a bomb threat).</li>
<li><strong>Untrusted ISP</strong>: You know that your ISP is monitoring, logging, and sharing your connection information (hint: they are). You could make a choice to hide your connection details from your ISP and instead give that responsibility to your VPN service which you have more trust for.</li>
<li><strong>Plausible Deniability</strong>: You could rely on the fact that thousands of other people are using the VPN service at that same time so it&rsquo;s difficult to correlate activities to an individual.</li>
<li><strong>Jurisdiction Diversity</strong>: It&rsquo;s easy for most organizations to issue a subpoena to a company in their same company. It&rsquo;s also easy for any of the <a href="https://en.wikipedia.org/wiki/Five_Eyes">5, 9, or 14 Eyes</a> to target services in their shared jurisdictions. If you have a VPN provider that is not in one of these jurisdictions, you can use them to make it harder to issue subpoenas to.</li>
</ul>


<h2>When to Tor > VPN</h2>

<p><img class="center" src="http://www.b3rn3d.com/images/torvpn.png" title="Tor > VPN" ></p>

<p>This is a bit more difficult to accomplish but possible. The issues here are you have to make sure you&rsquo;ve purchased a VPN service anonymously, make sure that it allows connections via tor, and make sure it supports TCP as tor is a TCP-only protocol. The only scenario I can think of that you would need this is:</p>

<ul>
<li><strong>Tor Blocked</strong>: Less of a security issue and more about usability, if a service blocks all tor exit nodes, you can try to use tor to hide you connection into a VPN service which is unlikely blocked.</li>
</ul>


<p>That being said, this is a really bad idea because when you have a consistent endpoint you connect to, it could have unknown consequences to your anonymity. This is the main reason that Tor switches circuits regularly instead of using the same circuit every time.</p>

<h2>When to VPN > Tor > VPN or Tor > Tor</h2>

<p><img class="center" src="http://www.b3rn3d.com/images/vpntorvpn.png" title="VPN > Tor > VPN" ></p>

<p>Now we&rsquo;re getting nutty but we can think it through. You&rsquo;ve made the choice to connect to tor via VPN, why not make another hop and just connect to another VPN service via Tor. Or, if you think 1x tor is pretty good, so 2x tor must be even better! Use cases:</p>

<ul>
<li><strong>You&rsquo;re nutty:</strong> Generally if you think there is an undisclosed vulnerability in tor, that is actively being used, but you still think that tor is the best option, you want to protect yourself by layering methods on top of tor.</li>
</ul>


<p>Whatever your rationality, know that this method has not been tested to see if it maintains your anonymity. There are so many edge cases of mis-configuration, fingerprinting attacks on the service, and plausible statistical attacks on your connection, you shouldn&rsquo;t assume this makes any sense.</p>

<h2>Further Reading</h2>

<p>VPN&rsquo;s are just one example of laying protections on top of tor. You could us private VPN hosted on a VPS, or SSH service, or if don&rsquo;t understand any of this, a proxy. This debate comes up so regularly that lots of groups have posts and wiki pages about it. Check out the links below for additional information:</p>

<ul>
<li><a href="https://trac.torproject.org/projects/tor/wiki/doc/TorPlusVPN">https://trac.torproject.org/projects/tor/wiki/doc/TorPlusVPN</a></li>
<li><a href="https://lists.torproject.org/pipermail/tor-talk/2012-January/022916.html">https://lists.torproject.org/pipermail/tor-talk/2012-January/022916.html</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The Worst That Could Happen: Substantiating Their Fears]]></title>
    <link href="http://www.b3rn3d.com/blog/2016/02/02/the-worst-that-could-happen/"/>
    <updated>2016-02-02T00:00:00+00:00</updated>
    <id>http://www.b3rn3d.com/blog/2016/02/02/the-worst-that-could-happen</id>
    <content type="html"><![CDATA[<p>In the latest Snowden document released is hilariously named: <a href="https://www.documentcloud.org/documents/2699620/What-Is-the-Worst-That-Can-Happen-March-2010.txt">What&rsquo;s The Worst That Could Happen</a>. In effect, this is the Government&rsquo;s thought process involved in determining the risk associated in launching a targeted attack on someon. In theory, this served as a guide to remind UK spooks of the various risks that are involved when trying to exploit someone. (It reads like it was put together by some GCHQ intern so I would pay too much attention to it.)</p>

<p>One of your main goals of your OPSEC plan is to reduce the likeliness of attack. With this document, we can see what an attacker believes to be the risks or their fears, and exploit them. As with all operation decisions, the risks outweigh their rewards. So let&rsquo;s make it risky for them to target you.</p>

<h2>Fears of Discovery</h2>

<p>Most of the document makes up a list of various different <em>results</em> of being discovered like if I catch someone in my bed room, the result would be that I could identify the person and punch them in the face. But the discovery section is where it gets interesting. This is a list of all the various ways they&rsquo;re concerned about being discovered. Their job, prior to deciding if an operation should be launched, is to identify the risk of your discovering them. Lets substantiate their fears by building some OPSEC plans.</p>

<p>Here&rsquo;s the list:</p>

<ul>
<li>Compromise of operation during installation</li>
<li>Inadequate personnel security controls and subsequent information leak</li>
<li>Discover of installed hardware (including post-operation)</li>
<li>Forensic discovery of installed software</li>
<li>Discovery of a suspicious audit trail/logs/registry</li>
<li>Discovery of suspicious RF energy</li>
<li>Suspicious profile caused by hardware/software malfunction</li>
<li>Discovery of egressed traffic</li>
<li>Discovery through other IT leakage</li>
<li>Vulnerability to HIS or other monitoring</li>
<li>Inadequate monitoring of profile generated by operation</li>
<li>Inadequate review of risks during the lifetime of the operation</li>
<li>Reliance on an uncertain supply chain or other risky dependencies</li>
<li>Failure by operators to cover tracks, including clearing logs/changing read statusof emails</li>
<li>Novel capabilities and techniques having unknown effects outside of lab testing conditions</li>
<li>Unforeseen changes to hardware or software leading to compromise of techniques or installation</li>
<li>Hardware/software malfunctions leading change in target behaviour, potentially including forensic investigation (and potential discovery) and/or loss of target access</li>
</ul>


<h2>Compromise During Installation</h2>

<p>A relatively easy fear to substantiate is the detetion of an exploit device installation. This could be an application or hardware installation a device you own as well as physical security threats like microphones or cameras. Suggestions might be:</p>

<ul>
<li>Security cameras to monitor your workspace.</li>
<li>Custom log that detects when unknown USB devices are installed.</li>
<li>Tools like tripwire that detect modifications to your OS and prevent installation.</li>
</ul>


<h2>Catching Them In The Act</h2>

<p>This  refers to catching a person in the middle of their operation. Examples would be sketchy vans parked outside of your flat, cars tailing you over long distances, or people following you on the streets. There are some fun OPSEC tactics we can apply here:</p>

<ul>
<li>Take illogical paths (circle around the block).</li>
<li>Don&rsquo;t have a predictable pattern of activities.</li>
<li>Use security cameras to keep a log of people around your</li>
</ul>


<h2>RF Detection</h2>

<p>Some of the &ldquo;bugs&rdquo; used by these types of people communicate by radio frequency. If you can show that you know about radio and that you know how to detect signals being relayed, you make yourself a risk of catching them.</p>

<ul>
<li>Use a software defined radio (<a href="https://greatscottgadgets.com/hackrf/">HackRF</a> or <a href="https://nuand.com/">BladeRF</a>#) to monitor normal radio signals around your facility. Regularly monitor for changes and send alerts.</li>
<li>Use bug detection tools (usually pretty expensive) to sweep your living space.</li>
</ul>


<h2>Malfunctions and Crashes</h2>

<p>The NSA&rsquo;s TAO program has a variety zero-days at their disposal. Most often, these exploits will cause some kind of crash on your system. When a crash happens, don&rsquo;t react by saying &ldquo;Oh, it does that sometimes.&rdquo; Make sure you have a way of detecting crashes and logging them somewhere to determine what occurred.</p>

<ul>
<li>Review all your logs after a crash. This seems simple but if you don&rsquo;t have time to debug a crash, at least store them for review later</li>
<li>Use tools like <a href="http://www.mcelog.org/">mce-log</a> that not only keep logs of hardware events but help predict when a crash is going to occur again.</li>
</ul>


<h2>Exfiltration Detection</h2>

<p>If something is installed on one of your devices, it alone can only collect information. Eventually it will need to exfiltrate it back to the attacker. There are some simple things you can do to try and detect when unauthorized connections are being made on your network.</p>

<ul>
<li>Use strict egress filtering on your operation&rsquo;s network segment. Only allow access to hosts you trust, via protocols you expect, over ports you know.</li>
<li>Alert yourself on unexpected network traffic such as outbound connections to other countries.</li>
</ul>


<h2>Missing From The List</h2>

<p>The list of course is not exhaustive. They don&rsquo;t go very deep into the various different discovery tactics. For example, you may consider building an extremely public system that everyone knows about and likes. In the case that something is attacked or exploited, a canary could go off that destroys that service. This would be the idea of collateral damage which could affect their public perception, share what country originated the attack, or just causes some political turmoil which makes it not worth the effort. In some ways, Edward Snowden can be an example of this.</p>

<h2>Conclusions</h2>

<p>Don&rsquo;t forget, each of these examples isn&rsquo;t talking about what you do <em>after</em> you&rsquo;ve been targeted, it&rsquo;s about a show of capabilities <em>before</em> you&rsquo;re targeted. If it looks like you follow tight OPSEC, make it very difficult/expensive to target, or just seem like you&rsquo;re not worth the effort, you&rsquo;re less likely to be targeted. Again, it&rsquo;s a simple question of risk vs reward.</p>

<p>An unfortunate side note should be mentioned: Performing all of these tactics may make you appear to be hiding something of higher reward to them than you truly are. We know that those of us that use things like GPG are specifically targeted <a href="http://www.wired.com/2014/07/nsa-targets-users-of-privacy-services/">solely because we encrypt a message</a>. Put another way, in order to quantify the reward of targeting you, they would first need to know what you&rsquo;re doing and they likely can&rsquo;t. This will lead them to deduce whatever you&rsquo;re doing is of high value to them based on the level of OPSEC you&rsquo;ve built. Defending against being targeted makes you a target. That circle is for another day.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OPSEC of Actor vs Drug Dealer]]></title>
    <link href="http://www.b3rn3d.com/blog/2016/01/23/actor-drugdealer-opsec/"/>
    <updated>2016-01-23T00:00:00+00:00</updated>
    <id>http://www.b3rn3d.com/blog/2016/01/23/actor-drugdealer-opsec</id>
    <content type="html"><![CDATA[<p>There&rsquo;s an <a href="https://theintercept.com/2016/01/12/sean-penn-el-chapo-opsec/">amazing story</a> talking about how the American actor Sean Penn accidentally gave away the location of El Chapo, the Mexican drug lord that has been on the run. The best part of the story is the OPSEC fails. I don&rsquo;t want to duplicate the article so go take a read if you want the full story. Let me summarize a few things though. From the information we&rsquo;ve gleaned, here&rsquo;s what he was doing for OPSEC:</p>

<ul>
<li>used &ldquo;mirroring&rdquo; to send messages</li>
<li>sent messages via draft folders</li>
<li>used a Blackberry Messenger, Blackphone, and burners</li>
<li>allegedly was caught because he ordered too many tacos</li>
</ul>


<h2>El Chapo</h2>

<p>The El Chapo story reminds you of the gangsters of old that were notoriously crooked, but everyone couldn&rsquo;t wait to see what they would do next. The Gangster Version of Kim Kardashian.</p>

<h2>Mirroring</h2>

<p>Enter the new OPSEC term, &ldquo;mirroring&rdquo;. At first, no one knew what this was because it&rsquo;s a made-up term for a simple OPSEC measure. It just means that communications were proxied to an intermediary party that would receive the message, and literally retype it by hand to another communication medium. The benefit here is that when El Chapo received a message, it only came from a single person which is hard to target as part of mass surveillance.</p>

<h2>Drafting</h2>

<p>If we&rsquo;re going to make up phrases, lets start calling using the Drafts folder to send messages, &ldquo;drafting&rdquo;. This is a now famous way of communicating that Al Qaeda used to do years ago and I&rsquo;m sure others used it before them. They would communicate via Yahoo mail and save messages in the drafts folder then have the recipient log in and just read the draft.</p>

<p>It&rsquo;s adorably ineffective today but back then and in the 90&rsquo;s, it was actually practical. The issue was that all SMTP communications were sent in the clear and the US Government programs were literally reading every email sent because they could. By not sending an email and just saving the message into the drafts folder, there was no email to intercept and you would just have a dead drop.</p>

<p>Things have changed and we&rsquo;ve moved beyond that but the idea of the electronic dead drop is still alive.</p>

<h2>Tacoed</h2>

<p>The best story, if you want to believe it, is that the Mexican authorities ultimately caught El Chapo because the number of tacos purchased was more than it should be for a place that size. Thus, he was &ldquo;Tacoed&rdquo;.</p>

<h2>Lessons in OPSEC</h2>

<p>While some of these stories are unlikely to be true like how El Chapo was tacoed, but if you put yourself in some of their roles, I think we can learn something</p>

<ul>
<li><strong>Tacoed or not, it&rsquo;s a real attack</strong>: You&rsquo;re unlikely to get tacoed anytime soon but if you believe you&rsquo;re under surveillance, what can you do to keep your purchasing patterns looking legitimate? Buying nothing is a red flag, but buying 50 pairs of pants in 50 different sizes is another red flag. Make purchases based on the type of person you&rsquo;re pretending to be. If you don&rsquo;t want anyone to know that you&rsquo;re there, maybe you shouldn&rsquo;t purchase anything at all, just go and pick it up.
<span class='pullquote-right' data-pullquote='You should never need to trust that the person you’re communicating with is adhering to an OPSEC plan.'></li>
<li><strong>Mirror mirror</strong>: If you have the resources to hire a crew of people to help you, sure, go ahead and mirror. It really does offer a defense from targeted mass surveillance. But just remember that whoever was transcribing the messages, was a trusted confidant of El Chapo.</li>
<li><strong>Lets stop drafting</strong>: It was a good idea back in the day but now it&rsquo;s just a tribute. I&rsquo;m all for finding interesting ways of doing a electronic dead drops like online forums, Craigslist, or blogs, but using a messaging system to save a draft is just silly. Find a medium that isn&rsquo;t specifically targeted by law enforcement and use that as a dead drop.</li>
<li><strong>Burners still good (sometimes)</strong>: We know that burners make it really hard for certain jurisdictions to track someone because it takes a few days to get a <a href="https://theintercept.com/2016/01/12/sean-penn-el-chapo-opsec/">warrant approved</a> but the NSA doesn&rsquo;t have that problem. If you can afford it, do it, but that doesn&rsquo;t mean that it&rsquo;s secure.</li>
<li><strong>Be careful talking to the OPSEC-less</strong>: I think the real story here is the difficulties that El Chapo had in talking to Sean Penn. Penn says he didn&rsquo;t know how to use computers, was given all the electronics to use, but still it required a ton of effort that he wasn&rsquo;t willing to invest. You should never need to trust that the person you&rsquo;re communicating with is adhering to an OPSEC plan. Your measures should ensure that if the other party is turned or caught, it doesn&rsquo;t point back to you. Of course this is an ideal but it&rsquo;s something you should always be thinking about when deciding if you might be burned or not.
</span></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Dark Shipping: A Case Study]]></title>
    <link href="http://www.b3rn3d.com/blog/2016/01/22/shipping-case-studies/"/>
    <updated>2016-01-22T00:00:00+00:00</updated>
    <id>http://www.b3rn3d.com/blog/2016/01/22/shipping-case-studies</id>
    <content type="html"><![CDATA[<p>I <a href="http://www.b3rn3d.com/blog/2016/01/02/how-to-ship-drugs/">wrote recently</a> about the risks of shipping using your country&rsquo;s shipping service and had a lot of interesting feedback. One individual which I believe has the experience raised an interesting suggestion so I thought a few case studies might be useful to discuss.</p>

<p>While not a shining example of solid OPSEC, Dread Pirate Roberts gives us a real-world perspective on what people are willing to do to ship things, illegally. Let&rsquo;s review a few of the things we know about his attempts to be dark.</p>

<h2>Case Study: DPR Is Your Roomate</h2>

<p>Ulbricht/DPR was known as <a href="http://www.forbes.com/sites/ryanmac/2013/10/09/living-with-ross-ulbricht-housemates-say-they-saw-no-clues-of-silk-road-or-the-dread-pirate-roberts/" title="">&ldquo;Josh&rdquo;</a> to his roomates that he met on Craigslist. He paid in cash to sublet a summer apartment in San Francisco. He arranges to pay in cash, he has no cell phone, and his current residence is a hotel near the airport. He made this seem less sketchy because he told the owners he was returning from a trip from Australia and wasn&rsquo;t on his feet yet.</p>

<p>This is a near-perfect situation. There&rsquo;s no legal record that &ldquo;Josh&rdquo; exists in this apartement but it&rsquo;s plausible that someone would want to rent it out. Josh could buy a new shirt and some jeans online to have a clean shipping record and then wait to ship his sensitive package.</p>

<ul>
<li>Good: Finding a shared location under a fake name.</li>
<li>Pretty Good: Paying in cash. This is often a red flag.</li>
<li>Bad: Not having a cell phone makes you look suspicious to normal people.</li>
<li>Bad: Craigslist is difficult to use completely anonymously. Law enforcement invest a lot of time into watching what happens on Craigslist now.</li>
</ul>


<h2>Case Study: DPR Tries To Use UPS</h2>

<p>One of the many OPSEC failures of DPR was when he went on his Google+ profile and asked if any of his contacts worked at <a href="http://www.theguardian.com/technology/2013/oct/03/five-stupid-things-dread-pirate-roberts-did-to-get-arrested">UPS, FEDEX or other private companies</a>. I believe his plan was to collect some intel on what private companies do to prevent illicit shipments or get a local hookup to pay off so that his packages weren&rsquo;t flagged.</p>

<p>The fact is there are several mandates that require private parcel companies to comply with U.S. federal laws. If for whatever reason they do not seem to adhere to these standards, the company will be fined and the business could be suspended. For publically traded companies, that&rsquo;s a very big incentive to try to catch illegal packages.</p>

<p>On the other hand, some of the very private parcel movers exist because of an expectation of privacy for their clients. Normaly this would be sending company secrets or plans for the big firm&rsquo;s merger, but the same would go for illicit deliveries. More often than not, these services are very expensive, and will not even consider taking any kind of untraceable payment.</p>

<ul>
<li>Good: Gathering intel about shipping methods.</li>
<li>Bad: Posting the request on Google+.</li>
<li>OK: Thinking about hiring a private group to ship things</li>
<li>Bad: It&rsquo;s unlikely you&rsquo;ll find a company that can ship across borders for cash or bitcoin.</li>
</ul>


<h2>Did we learn anything?</h2>

<p>Some people say they have the perfect solution and others believe it&rsquo;s not possible. I still believe that if it&rsquo;s important enough to you, you&rsquo;ll find a way to ship it. In that case, all you can do is limit your risk by not being an obvious target. You&rsquo;ll also have to decide how commited you are in terms of a time and money investment. Some of the things that DPR did require a lot of effort. He gave up his social life, his identity, and in the end, his freedom to be able to do what he wanted. Are you prepared to do theh same?</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Website Fingerprinting Attacks and Defense]]></title>
    <link href="http://www.b3rn3d.com/blog/2016/01/20/behavior-fingerprinting/"/>
    <updated>2016-01-20T00:00:00+00:00</updated>
    <id>http://www.b3rn3d.com/blog/2016/01/20/behavior-fingerprinting</id>
    <content type="html"><![CDATA[<p>I do enjoy a deeply theoretical academic paper, but even better are those papers that take effort to determine how pragmatic an attack is. <a href="https://securewww.esat.kuleuven.be/cosic/publications/article-2456.pdf">A Critical Evaluation of Website Fingerprinting Attacks</a> takes a look at some of the theoretical attacks on Tor and see how likely they would work in the real world.</p>

<p>Better than that, it gives you a break down of the most likely attacks that users need to defend themselves against.</p>

<h2>Website Fingerprinting</h2>

<p>The attack that they&rsquo;re reviewing here shouldn&rsquo;t be confused with Browser Fingerprinting or other types of fingerprinting attacks. It refers to an adversary being able to deduce what website you&rsquo;re going to.</p>

<p>The premise in previous papers has been that on low-latency anonymity networks (like tor), attackers can analyze your connection and guess which page you&rsquo;re visiting. For example, when you go to <a href="https://www.google.com,">https://www.google.com,</a> you are visiting a page that has a predictable size, response time, and predictable number of secondary page requests being made.</p>

<h2>The Size Correlation Fingerprint</h2>

<p>One of the most rudimentary attacks is an adversary that stands between a user and Tor to see the packets being sent out and the size of the packets returned. In this simple approach, it&rsquo;s possible for an attacker that has a database of websites and their possible sizes, is able to guess which sites a user is visiting.</p>

<p><strong>Defense</strong>: &ldquo;Padding&rdquo; is considered a defense against website fingerprinting because it adds arbitrary data to your request that makes it harder for an attacker to correlate your visit to the actual website in question.</p>

<p>The Tor Project has made a decision not to implement padding. On purpose. They&rsquo;re now taking a look at research that might mean that adding small amounts of padding will have a major affect. It&rsquo;s yet to be concluded.</p>

<p>Other defenses that the paper goes into are what happens when there are multiple tabs being opened and what about the situation where something else on the network is padding things for you. The latest TBB has a nice feature that makes a separate connection in multiple tabs.</p>

<h2>The Behavioral Fingerprint</h2>

<p>One of the most discussed tactic was to take a pile of University students', watch the websites that they visit over multiple days, and then watch for similar patterns sent over Tor.</p>

<p>The basis of this attack is that you visit web pages in a linear order. You will go to your favorite news site, then Facebook, then your boyfriend&rsquo;s blog, and then your favorite shopping site. Often times, you will go in the cycle of visits multiple times over the course of a day.</p>

<p>Attackers knowing the potential sizes of pages, the loading time of a site, and other quantifiable factors, can fingerprint your browsing behavior.</p>

<p><strong>Defense</strong>: There are two options that I&rsquo;m sure you can imagine: Don&rsquo;t ever switch between dark and clear or make sure that your behavior is completely different on a dark persona.</p>

<h2>Targeted vs Untargeted</h2>

<p>There&rsquo;s a major different in the attack vectors between an adversary targeting you as an individual, versus what the paper calls a &ldquo;drag-net&rdquo; approach.</p>

<ul>
<li>Targeted attacks have less reward but are more accurate</li>
<li>Untargeted attacks have more reward but are more difficult to identify high value targets</li>
</ul>


<p>Which is most likely? While the most paranoid of us believe we are being targeted (and we should), unless you are truly a high-value target, there are not many groups trying to specifically launch a targeted attack. But a mass surveillance situation is a much more likely scenario.</p>

<p><strong>Defense</strong>: Burn, and burn often. The premise of my OPSEC model is to never give someone a chance to correlate between two different identities. If you&rsquo;re able to do that, you&rsquo;re able to defend against either of these attack scenarios.</p>

<h2>Results</h2>

<p>Long story short, some of these academic papers talking about potential attacks, take a substantial investment. That being said, we know there are organizations interested in investing those resources, but at the same time, a targeted attack on individual computers is less likely than a mass surveillance situation. Be aware that these attacks exist and never visit your favorite websites across multiple identifies.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Ship Drugs to Your House]]></title>
    <link href="http://www.b3rn3d.com/blog/2016/01/02/how-to-ship-drugs/"/>
    <updated>2016-01-02T00:00:00+00:00</updated>
    <id>http://www.b3rn3d.com/blog/2016/01/02/how-to-ship-drugs</id>
    <content type="html"><![CDATA[<p>You&rsquo;ve found your favorite drugs on your favorite darknets but then your OPSEC buzzer goes off and you say &ldquo;How do I actually get it shipped to me?&rdquo; Lets talk about some of the risks and likely attacks.</p>

<h2>The Fallacy Of The Drop Ship</h2>

<p>The first thing you might think is, just like your computer, find a way to be completely anonymous. That would mean sending to a &ldquo;drop ship&rdquo; location or someone else&rsquo;s house. You&rsquo;ll find documents online about how the best way to do this is:</p>

<p><img class="right" src="http://www.b3rn3d.com/images/package.png" width="400"></p>

<ul>
<li>find a house in a city that no one lives in</li>
<li>mow the lawn once week</li>
<li>let the neighbors know who you are</li>
<li>send some fake packages and receive them at the location</li>
<li>establish a pretend situation where you are there multiple times during the week.</li>
</ul>


<p>The number of people that can do this is uselessly low. If you can do this, good for you but don&rsquo;t waste your time trying to figure this situation out.</p>

<p>Lets talks talk about some pragmatic approaches.</p>

<h2>Risk Calculations</h2>

<p>To get something shipped, you must take a risk calculation. How much do you care about the package you&rsquo;re receiving, how often are you doing it, how likely are you to be caught, and what are the consequences of being caught.</p>

<pre><code>value * frequency + caught * sentence = RISK
</code></pre>

<p>This is a fabricated calculation for the sake of discussion but you can use it to come up with an arbitrary number to assign a consistent risk score and it&rsquo;s on point.</p>

<p>Lets review your situation:</p>

<ul>
<li>you plan on sending an illegal product across country, providence, or state lines</li>
<li>you plan on using a federally funded system to do so (in the case of US Mail)</li>
<li>You are plan on putting a name and address on the recipient of the illegal product</li>
</ul>


<h2>How do you do it?</h2>

<p>First: Don&rsquo;t. I know that&rsquo;s a cop out but seriously reconsider. Other options are:</p>

<ul>
<li>pick it up directly from the contact</li>
<li>agree on shipping using a private company</li>
</ul>


<p>Ok, you&rsquo;re not going to do that. If you need to, here are a few things to remember:</p>

<ul>
<li>Use your real name. I know, just do it. It is trivial for your delivery service to notice when a new name appears on an address. An out-of-country parcel to a name that doesn&rsquo;t exist is a big red flag.</li>
<li>Make yourself unlikely to be caught. Ship small packages, envelopes, low quantities. Remember that law enforcement is a career path. Johnny Law isn&rsquo;t going to make captain by nabbing a dime bag.</li>
<li>Be nice. There&rsquo;s are documents that show how delivery guys are responsible for determining if you are a sketchy person and decide that you&rsquo;re a high risk delivery.</li>
<li>Don&rsquo;t sign for your packages. There will always be situations where you need to but don&rsquo;t use your real signature. Have you ever noticed how your mum signs for a package?</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tor Browser vs Your Browser]]></title>
    <link href="http://www.b3rn3d.com/blog/2015/12/16/tor-browser-vs-your-browser/"/>
    <updated>2015-12-16T00:00:00+00:00</updated>
    <id>http://www.b3rn3d.com/blog/2015/12/16/tor-browser-vs-your-browser</id>
    <content type="html"><![CDATA[<p>There are two main choices to use tor: Use the Tor Browser Bundle(TBB), or manually setup a computer to run tor. Maybe you&rsquo;ve spent time making a secure host and you only route traffic over tor and you&rsquo;ve employed various security protections to limit your risk, etc. So you, you say to yourself, &ldquo;I don&rsquo;t need the Tor Browser Bundle, I&rsquo;ve already installed tor.&rdquo; You would be wrong.</p>

<p>The Tor Browser (part of TBB) offers a lot of additional security protections that your &ldquo;raw&rdquo; browser doesn&rsquo;t. <a href="https://www.torproject.org/about/corepeople.html.en">Mike Perry</a> who manages the TBB portion of the Tor Project (among other things) has put in a lot of work.</p>

<p>Here are just a few reasons:</p>

<h1>Reason #1: WebRTC</h1>

<p>Here&rsquo;s a quick example: Remember the <a href="https://threatpost.com/webrtc-found-leaking-local-ip-addresses/110803/">private IP disclosure</a> vulnerability that&rsquo;s possible using WebRTC? Well the <em>only</em> browser (AFAIK) that isn&rsquo;t vulnerable to this issue is the Tor Browser. You can&rsquo;t prevent it by disabling JavaScript and you can&rsquo;t block it through an extension. And we know that Chrome, Safari, IE, and Opera aren&rsquo;t any help either.</p>

<p>This issue alone should scare you into reconsidering using a raw browser no matter how many extensions you have installed. By the way, if you&rsquo;re interested in seeing how you can disable WebRTC from firefox, it&rsquo;s a compiletime flag: <code>--disable-webrtc</code>.</p>

<h1>Unique Identifiers</h1>

<p>If I can correlate your website visit across mutiple sessions I can potentially deanonymize you in the case that you visit my site over tor and then in the clear. Even in the best case, I will still be able to watch your activities across multiple visits. What if I can correlate between when you log in as user A to those when you log in as user B.</p>

<p>There are so many situations where a malicious web page could include some kind of identifying token. The ones mitigated by TB include:</p>

<ul>
<li>HTTP auth headers (e.g. <code>http://{IDENTIFIER}username:password@website.com/</code>)</li>
<li>Cache lookup (e.g. injecting an ID into the cache and check to see if it exists on next visit)</li>
<li>Cookies (e.g. tracking cookie identified by third parties)</li>
<li>HSTS super cookies (e.g. multi-site owners can build a unique ID based on whether a user has a cached HSTS record for a particular set of domains)</li>
</ul>


<h1>Fingerprinting Defenses</h1>

<p>Fingerprinting the browser, the hardware, the user, the location, or any kind of identifying information related to a user&rsquo;s session is a very difficult attack to completely defend against. TB does what it can though to defend against this scenario. There are some crazy attacks available including:</p>

<ul>
<li><a href="http://www.andlabs.org/tools/jsrecon.html">port scanning via web sockets</a></li>
<li>extracting a list of installed fonts</li>
<li><a href="https://dvcs.w3.org/hg/gamepad/raw-file/default/gamepad.html#widl-Gamepad-id">USB device enumearation via the Gamepad API</a></li>
</ul>


<p>Maybe TB hasn&rsquo;t solved this problem but the question is, what do you think your current browser is doing?</p>

<h1>Plugin Controls</h1>

<p>Your extensions/plugins/addons are terrifying. They can do whatever they want, not only to your browser, but to anything on your system. Because of this, TB has <a href="https://gitweb.torproject.org/tor-browser.git/commit/?h=tor-browser-31.6.0esr-4.5-1&amp;id=8c6604d2b776f0d8e33ed9130c5f5b8cf744bac8">patched the DNS service</a> to ensure that a browser extension doesn&rsquo;t accidentally leak your DNS requests. This is also done for OCSP so that certificate lookups must be done over the SOCKS proxy and tor.</p>

<p>Similarly, when loading the Flash or Gnash plugin, TB uses the click-to-play control so that in order to play a Flash applet, the user must explicitally click on it before it executes. The risk of Flash or any plugin for that matter goes back to whether it always adheres to proxy settings as well as what type of information is exposed to the applet. Can they obtain your local IP? Can they access a session cookie?</p>

<h1>External Event Blocking</h1>

<p>On your computer right now, you&rsquo;ve likely setup default programs associated with certain types of files. In a browser, you can also setup external programs associated to a protocol. For example <code>tel://</code>, <code>skype://</code>, or <code>ssh://</code> allows a browser to automatically send data from the browser into the associated program. There&rsquo;s a risk here that it will disclose your private info to those programs and therefore compromise your anonymity.</p>

<p>The defense in this case is present a <a href="https://gitweb.torproject.org/torbutton.git/tree/src/components/external-app-blocker.js">pop-up</a> whenever a request to leave the browser is made.</p>

<h1>History and Storage</h1>

<p>TB does everything it can to never touch your disk and never allow your browsing history to be saved to a file. There are a lot of ways <a href="https://trac.torproject.org/projects/tor/query?keywords=~tbb-disk-leak&amp;status=!closed">this is accomplished</a> but the risk has been that if the history or sensitive information is stored on disk, it may be accessible to other appliations or to a forensic investigator.</p>

<h1>More information</h1>

<p>There&rsquo;s <a href="https://www.torproject.org/projects/torbrowser/design/">dozens of other</a> reasons that may or may not be applicable to your plans. The point here again is, the level of effort that the Tor Browser has employed makes you question how secure your current browser configuration is.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Running Tor Browser Without the Bundle]]></title>
    <link href="http://www.b3rn3d.com/blog/2015/12/15/tor-browser-bundle-without-bundle/"/>
    <updated>2015-12-15T00:00:00+00:00</updated>
    <id>http://www.b3rn3d.com/blog/2015/12/15/tor-browser-bundle-without-bundle</id>
    <content type="html"><![CDATA[<p>In the case that you already have Tor installed and you don&rsquo;t need the Tor Browser Bundle (TBB) to manage your tor connection, you can run it without the additinal launcher plugin.</p>

<h2>How</h2>

<ul>
<li>Download <a href="https://www.torproject.org/download/download-easy.html.en">TBB</a></li>
<li>Extract</li>
<li><p>Cd to the following directory:</p>

<pre><code>  tor-browser_en-US/Browser/TorBrowser/Data/Browser/profile.default$
</code></pre></li>
<li>Modify <code>extensions.ini</code></li>
<li><p>Comment out the following line:</p>

<pre><code>  #Extension2=/home/death/Downloads/tor-browser_en-US/Browser/TorBrowser/Data/Browser/profile.default/extensions/tor-launcher@torproject.org.xpi
</code></pre></li>
</ul>


<h2>Setup</h2>

<p>This assumes that you&rsquo;re running tor on port 9050 and ideally that you have your control port enabled with a password of &ldquo;secret&rdquo; to access it. That&rsquo;s only if you want to be able to control Tor via the browser extension. Maybe you don&rsquo;t.</p>

<p>If you want to set your password to &ldquo;sercret&rdquo; you can use tor to generate the hash for you:</p>

<pre><code>    tor --hash-password secret
</code></pre>

<p>Copy that into your /etc/torrc file under the HashedPassword section.</p>

<p>You can take a look at the other comments found in <code>start-tor-browser</code>:</p>

<pre><code>    # SETTING NAME                            VALUE
    # extensions.torbutton.banned_ports       [...],&lt;SocksPort&gt;,&lt;ControlPort&gt;
    # extensions.torbutton.block_disk         false
    # extensions.torbutton.custom.socks_host  127.0.0.1
    # extensions.torbutton.custom.socks_port  &lt;SocksPort&gt;
    # extensions.torbutton.inserted_button    true
    # extensions.torbutton.launch_warning     false
    # extensions.torbutton.loglevel           2
    # extensions.torbutton.logmethod          0
    # extensions.torbutton.settings_method    custom
    # extensions.torbutton.socks_port         &lt;SocksPort&gt;
    # extensions.torbutton.use_privoxy        false
    # extensions.torlauncher.control_port      &lt;ControlPort&gt;
    # extensions.torlauncher.loglevel          2
    # extensions.torlauncher.logmethod         0
    # extensions.torlauncher.prompt_at_startup false
    # extensions.torlauncher.start_tor         false
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Arms Race to the Most Secure OS]]></title>
    <link href="http://www.b3rn3d.com/blog/2015/12/04/qubes-opsec/"/>
    <updated>2015-12-04T00:00:00+00:00</updated>
    <id>http://www.b3rn3d.com/blog/2015/12/04/qubes-opsec</id>
    <content type="html"><![CDATA[<p>The Snowden revelations have not only motivated people into building new security-centric tools but also to take a look at the tools we previously considered secure. This holds true for ultra-secure operating systems like <a href="https://tails.boum.org/">TAILS</a> and have created reactionary projects like <a href="https://subgraph.com/sgos/">SubgraphOS</a> and <a href="https://www.qubes-os.org/">QubesOS</a>. Let&rsquo;s take a look at the state of these projects as well as their end goals.</p>

<h1>TAILS</h1>

<p><img class="right" src="http://www.b3rn3d.com/images/tails.png" width="300">
<a href="https://tails.boum.org/">TAILS</a>, for years, has been most popular OS for the anonymous community. With official support from the Tor Project (financial and managerial), many regard this as the de facto standard.</p>

<p>The TAILS security model can be considered &ldquo;classical&rdquo; in the sense that it attempts to take an existing OS and harden to the n'th degree, add some of the privacy enhancing tools, and make sure there are no compromising flaws.</p>

<p>As stated, we are paying more attention to the secure tools that we use and this has identified some <a href="https://www.schneier.com/blog/archives/2014/07/security_vulner_4.html">fatal flaws</a> in TAILS. If you <a href="https://tails.boum.org/security/#index3h1">look back</a> at the TAILS project, the number of vulnerabilities identified and reported have are much smaller before than after Snowden disclosures.</p>

<ul>
<li><strong>Development</strong>: Highly active with multiple paid developers</li>
<li><strong>Maturity</strong>: First created in</li>
<li><strong>Goals</strong>: Provide an easy-to-use live environment for temporary work.</li>
<li><strong>Roadmap</strong>: Continue same model and further harden the OS.</li>
<li><strong>Challenges</strong>:

<ul>
<li>Minimal support for persistence (besides files). Not designed to be installed but just run once.</li>
<li>No mitigations for GCHQ/NSA type low level hardware attacks</li>
<li>The focus on supporting all forms of users may affect security</li>
</ul>
</li>
</ul>


<h2>Qubes OS</h2>

<p><img class="right" src="http://www.b3rn3d.com/images/qubes.png" width="300">
I&rsquo;ll start by saying this is the project I&rsquo;m rooting for. <a href="https://www.qubes-os.org/">QubesOS</a> starts with the premise that your OS <em>will</em> be exploited. Your browser will exploit you, your storage device will attack your computer, you mail client will try and attack your web browser. To mitigate these risks, they were the first project to successfully implement a compartmentalization model using a hypervisor (as opposed to Linux kernel controls) using XEN.</p>

<p>If that seems too abstract, here&rsquo;s an example: You want to sell illicit things on the darknet. In Qubes, you build a new WHONIX instance running TBB and all your activities are done in that context.</p>

<p><span class='pullquote-right' data-pullquote='it works similar to how I write about OSPEC: Everything is a separate identity, one identity does not touch the other, when you are done with an identity, burn it. Replace the word “identity” with “virtual object” and you have their security model'>
Technical details aside for a moment, it works similar to how I write about OSPEC: Everything is a separate identity, one identity does not touch the other, when you are done with an identity, burn it. Replace the word &ldquo;identity&rdquo; with &ldquo;virtual object&rdquo; and you have their security model.</p>

<p>This is accomplished by making several virtual objects. You virtualize your firewall, you virtualize your USB controller, you virtualize the browser you&rsquo;re using for Project A, and separately, you virtualize the browser you&rsquo;re using for Project B. From here, QubesOS helps facilitate communications between those objects if necessary.
</span></p>

<p>QubesOS offers some features that no other system currently offers. The big one for me is virtualization for USB controller. So no only are you creating virtual machines, you&rsquo;re creating virtual controllers. If someone malicious is plugged into your system, even in the case of an [0-day exploiting the firmware of your USB controller], the rest of your system is not compromised.</p>

<p>The other major feature that we know is in the GCHQ playbook is protection from WiFi driver exploits. We&rsquo;ve heard of this exploit being used in the while but have yet to have a real mitigation from it. With QubesOS, your wireless card is its own virtual object that contains the exploit into its own virtual machine.</p>

<p>There is a lot more to talk about with QubesOS but it does seem the one to watch going forward.</p>

<ul>
<li><strong>Development</strong>: Active but a small group.</li>
<li><strong>Maturity</strong>: v3.1 released is functional but not perfect.</li>
<li><strong>Roadmap</strong>: Investing time in rebuilding the UI is a priority.</li>
<li><strong>Challenges</strong>:

<ul>
<li>Hardware support is difficult to predict. They have an approved list but you can&rsquo;t assume it will work on all systems.</li>
<li>Performance is relatively poor to the other systems and Qubes consumes a lot of memory for each of the virtual machines.</li>
</ul>
</li>
</ul>


<h2>SubgraphOS</h2>

<p><img class="right" src="http://www.b3rn3d.com/images/subgraph.png" width="300">
<a href="https://subgraph.com/sgos/">SubgraphOS</a> is in the same category as Qubes where it is focusing its efforts to leverage containerization into the system to compartmentalize application. Then an abstraction layer is placed on top to provide communication between said objects.</p>

<p>The main difference between QubesOS and SubgraphOS is that it uses Linux containers as opposed to XEN objects.</p>

<p>The problem thus far is that only a small group of people have seen SubgraphOS working. I&rsquo;m also concerned about the development of SubgraphOS by the company, Subgraph. We know that Subgraph is a <a href="https://subgraph.com/about-us/index.en.html">&ldquo;security&rdquo; company</a> that aims to provide services and products to its clients. The other two projects discussed here have been community projects and money is not the primary goal. The owner of the company comes from the secure kernel world where he was a mod of one of the most popular and dramatic bug hunting mailing lists.</p>

<p>SubgraphOS had the problem of being announced way too soon. They showed off the now famous <a href="https://subgraph.com/img/sgos.png">SubgraphOS images</a> that caught everyone&rsquo;s eye before there was anything to actually look at.</p>

<p>I come from the perspective of seeing tons of projects die in the past. The ones that I&rsquo;ve seen stick through are not usually (ever?) the ones released for free by a money making company.</p>

<ul>
<li><strong>Development</strong>: Probably active? Not open to the public.</li>
<li><strong>Maturity</strong>: Immature, pre-alpha releases</li>
<li><strong>Roadmap</strong>: Hopefully release a beta to the public soon.</li>
<li><strong>Challenges</strong>:

<ul>
<li>Money may affect the development of the product.</li>
<li>Closed development may deter acceptance of even a finished product.</li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Camgirl OPSEC]]></title>
    <link href="http://www.b3rn3d.com/blog/2015/10/22/bad-camgirl-opsec/"/>
    <updated>2015-10-22T00:00:00+00:00</updated>
    <id>http://www.b3rn3d.com/blog/2015/10/22/bad-camgirl-opsec</id>
    <content type="html"><![CDATA[<p>If you read this <a href="http://motherboard.vice.com/read/camgirl-opsec-how-the-worlds-newest-porn-stars-protect-their-privacy-online">interesting post</a> from the nice people over at Vice, it covers a few items about good OPSEC when you have the threat of stalkers as part of your threat model.</p>

<h2>Low Tech But High Investment</h2>

<p><img class="right" src="http://www.b3rn3d.com/images/badgirl.jpg" width="300"></p>

<p>You don&rsquo;t expect that an overzealous camgirl fan to be able to do facial recognition, but we know that services like Google and Facebook can offer <a href="http://www.facesearch.com/">this service</a> for free! Doing a reverse image lookup or trying to look at a photo&rsquo;s metadata are really simple things that just about any low life can figure out.</p>

<p>The more serious weapon that they have is not technology, but commitment and drive. They will do anything in their power to try and find out information about you.</p>

<h2>Recommendations</h2>

<p><strong>Buy Burner Everything</strong>: We&rsquo;ve heard about burner phones but don&rsquo;t forget about a dedicated cam girl laptop, and more importantly camgirl camera used only for your online business.</p>

<p>Your camera can tell a lot about you. The optics, resolution, capabilities are all fingerprintable metrics. If a perv is able to find another photo series using the same expensive equipment, it may be be possible for them to find that you&rsquo;re cross-posting dirty pictures on other sites like Facebook.</p>

<p><strong>Do Your Homework On The Service:</strong> The article mentions using a VPN of course. This is important as a fall back but it&rsquo;s important that the camgirl service being used does everything it can to protect your IP from being leaked. Ask questions to the service about whether IPs are logged and who has access to that information. How do you create accounts and how do you recover your password if it&rsquo;s lost? Which brings us to a reminder about account security.</p>

<p><strong>Secure Your Accounts:</strong> Does the cam service let you reset your password by answering a few personal questions? Are these questions that someone that is a super-fan would know by chatting with you? Find a cam service that provides two-factor security so that you enter in a user name, a password, and then you have to enter in a One-Time-Password. This will help ensure that no one is able to get in even if they guess what your password is. In my &ldquo;research&rdquo; I have found only once service that provides this type of security. And of course, choose a strong password.</p>

<p><strong>Build a List Of Lies:</strong> There is no good defense against someone that is going to do everything they can to try and get you to leak information about yourself. As I&rsquo;ve discussed before, don&rsquo;t tell them what you don&rsquo;t want them to know. Lie to them.</p>

<p>If someone asks you about your coffee table and you realize it was made two streets down from your current location, don&rsquo;t say &ldquo;Sorry I can&rsquo;t tell you.&rdquo; You&rsquo;ve confirmed to the adversary a piece of sensitive information that they will likely target at another time. Lie to them. Tell them it&rsquo;s a popular brand purchased from a popular store that is popular in your entire country.</p>

<p>Come up with a list of lies so that you can remember to maintain them. This could include:</p>

<ul>
<li>Name</li>
<li>Country of origin</li>
<li>Age of your house</li>
<li>Brothers, sisters, family members and their names</li>
<li>Previous relationships</li>
<li>Favorite band, music, politician, TV show, movie, book, etc.</li>
<li>University and expertise</li>
<li>Professional employment</li>
</ul>


<p><strong>Hide In The Darkness:</strong> If you live cam at 17:00 every day, and you do it by a window, they not only will be able to deduce what timezone you&rsquo;re in, but also how far North you live. Those camgirls that live in the Scottish Highlands will have a lot less daylight towards Winter, something that an attacker would notice.</p>

<p><strong>Tell Your Friends About Your Policy:</strong> You might be embarrassed about being a cam'er and telling your friends about it is the worst idea. But consider this, if someone finds out that you are a cam girl, are you sure that friend won&rsquo;t leak your information.</p>

<p>When someone finds out that you are friends with someone else, their gears will automatically shift to finding out about them. Do they have the same OPSEC policy as you? Do they have an open Facebook account? Do they have any other pictures of you that they&rsquo;re willing to sell?</p>

<p><span class='pullquote-right' data-pullquote='It’s always better to confide in someone a secret, than risk they find out on their own.'>
It seems bad opsec to disclose a secret but it is counterintuitive. It&rsquo;s always better to confide in someone a secret, than risk they find out on their own. By letting them in on the secret, and showing them how serious the secret is to you, you are asking them to join in to protect that secret. Without doing so ahead of time, there is no social contract that would imply this.
</span></p>
]]></content>
  </entry>
  
</feed>
